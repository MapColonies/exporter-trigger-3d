global:
  S3:
    source:
      accessKey: ''
      secretAccessKey: ''
      server: ''
      serverPort: 9000
      serverProto: ''
      bucket: ''
      region: ''
      style: ''
      sslEnabled: false
      maxAttempts: 
      sigVersion: 
  ingestion:
    providers:
      source: NFS
      destination: S3 
    NFS:  
      source:
        name: ''
        pv_path: ''
        sub_path: ''
      # destination:
      #   name: ''
      #   pv_path: ''
      #   sub_path: ''
    splunk:
      enabled: false
      annotations:
        collectord.io/index: SPLUNK_INDEX
        collectord.io/logs-output: splunk

    job:
      type: ''
    task:
      type: ''
      batches: 1000
      maxAttempts: 3
    jobManager:
      url: ''

  ca:
    enabled: false
    useExternal: true
    secretName: ''
    path: ''
    key: ''

S3:
  source:
    accessKey: ''
    secretAccessKey: ''
    server: ''
    serverPort: 9000
    serverProto: ''
    bucket: ''
    region: ''
    style: ''
    sslEnabled: false
    maxAttempts: 
    sigVersion: 

ingestion:
    providers:
      source: NFS
      destination: S3

    NFS:  
      source:
        name: ''
        pv_path: {}
        sub_path: ''
      # destination:
      #   name: ''
      #   pv_path: ''
      #   sub_path: ''

    splunk:
      enabled: true
      annotations:
        collectord.io/index: ''
        collectord.io/logs-output: ''

    job:
      type: ''
    task:
      type: ''
      batches: 1000
      maxAttempts: 3
    jobManager:
      url: ''
      
ca:
    enabled: false
    useExternal: true
    secretName: ''
    path: ''
    key: ''

# Add side car to the Deployment, for example
# sidecars: |-
#   - name: sidecar
#     image: "{{ .Values.sidecar.image }}:{{ .Values.sidecar.imageTag }}"
#     volumeMounts: []
#     args: []
#     ports: []
#     resources:
#     {{- toYaml .Values.sidecar.resources.value | nindent 12 }}
sidecars: ''

replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030
image:
  repository: store-trigger
  tag: ''
env:
  timeout: 6000
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 10mb
  tracing:
    enabled: false
    url: 'http://localhost:55681/v1/trace'
  metrics:
    enabled: false
    url: 'http://localhost:55681/v1/metrics'
  blackList: ["tar", "zip", "rar", "7z"]
  maxConcurrency: 5
resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
route:
  enabled: false
  path: ''
  https: true
  host:
  useCert: false
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)